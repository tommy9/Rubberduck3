<UserControl x:Class="Rubberduck.UI.Xaml.Controls.DialogShell"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Rubberduck.UI.Abstract;assembly=Rubberduck.UI"
             xmlns:local="clr-namespace:Rubberduck.UI.Xaml.Controls"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance {x:Type vm:IDialogShellViewModel}, IsDesignTimeCreatable=False}"
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/DefaultStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BitmapImage x:Key="DuckyIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Ducky.ico" />
            <BitmapImage x:Key="DummyIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/ObjectProperties.png" />
            <!--https://blog.magnusmontin.net/2013/03/16/how-to-create-a-custom-window-in-wpf/-->
            <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                                <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
                <Setter Property="FontFamily" Value="Webdings"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="0,5,3,5"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Gray" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="{DynamicResource DialogTitleBarBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image Grid.Column="0" Source="{StaticResource DuckyIcon}" Margin="4" Height="16"/>
            <TextBlock Grid.Column="1" Text="{Binding TitleText}" Foreground="{StaticResource WhiteBrush}" Margin="4" d:Text="Rubberduck | DialogShell" />
            <Button Grid.Column="2" x:Name="minimizeButton" Style="{StaticResource WindowButtonStyle}" Content="0" />
            <Button Grid.Column="3" x:Name="restoreButton" Style="{StaticResource WindowButtonStyle}" Content="1" />
            <Button Grid.Column="4" x:Name="closeButton" Style="{StaticResource WindowButtonStyle}" Background="Red" Content="r" />
        </Grid>
        <Grid Grid.Row="1">
            <StackPanel Margin="8,3,0,0" Orientation="Horizontal">
                <Image Source="{Binding IconSource}" d:Source="{StaticResource DummyIcon}" />
                <TextBlock Text="{Binding TitleLabelText}" FontWeight="Bold" Margin="10,0,0,0" d:Text="Title Lable Text" />
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2" Margin="20,3,0,0">
            <TextBlock Text="{Binding InstructionsLabelText}" d:Text="Instructions Text"/>
        </Grid>
        <Border Grid.Row="3" Margin="20,3,0,0" BorderBrush="{StaticResource HighlightBorderActiveBrush}">
            <TextBlock Text="{Binding ContentsText}" d:Text="Contents"/>
        </Border>
        <Grid Grid.Row="4">
            <StackPanel Orientation="Horizontal">
                
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
